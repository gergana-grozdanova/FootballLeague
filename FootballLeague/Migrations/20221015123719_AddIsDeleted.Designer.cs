// <auto-generated />
using System;
using FootballLeague.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FootballLeague.Migrations
{
    [DbContext(typeof(FootballLeagueContext))]
    [Migration("20221015123719_AddIsDeleted")]
    partial class AddIsDeleted
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FootballLeague.Data.Entities.Match", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPlayed")
                        .HasColumnType("bit");

                    b.Property<string>("Team1Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Team1Result")
                        .HasColumnType("int");

                    b.Property<string>("Team2Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("Team2Result")
                        .HasColumnType("int");

                    b.Property<string>("TeamId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeamId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeamId2")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Team1Id");

                    b.HasIndex("Team2Id");

                    b.HasIndex("TeamId");

                    b.HasIndex("TeamId1");

                    b.HasIndex("TeamId2");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("FootballLeague.Data.Entities.Team", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FootballLeague.Data.Entities.Match", b =>
                {
                    b.HasOne("FootballLeague.Data.Entities.Team", "Team1")
                        .WithMany()
                        .HasForeignKey("Team1Id");

                    b.HasOne("FootballLeague.Data.Entities.Team", "Team2")
                        .WithMany()
                        .HasForeignKey("Team2Id");

                    b.HasOne("FootballLeague.Data.Entities.Team", null)
                        .WithMany("WonMatches")
                        .HasForeignKey("TeamId");

                    b.HasOne("FootballLeague.Data.Entities.Team", null)
                        .WithMany("LostMatches")
                        .HasForeignKey("TeamId1");

                    b.HasOne("FootballLeague.Data.Entities.Team", null)
                        .WithMany("DrawMatches")
                        .HasForeignKey("TeamId2");

                    b.Navigation("Team1");

                    b.Navigation("Team2");
                });

            modelBuilder.Entity("FootballLeague.Data.Entities.Team", b =>
                {
                    b.Navigation("DrawMatches");

                    b.Navigation("LostMatches");

                    b.Navigation("WonMatches");
                });
#pragma warning restore 612, 618
        }
    }
}
